@using MenaWeb.ViewModels;
@using MenaWeb.Extensions;
@using MenaWeb.Models.Entities;
@model ContractListVM

@{
    ViewData["Title"] = "Массовые отчеты по договорам мены";
    var text = "Количество записей: " + Model.PageOptions.TotalRows;
}

<div class="col status"></div>

<h2>@ViewData["Title"]</h2>
<partial name="ContractReportsModal">
    <h4 class="mb-3">@text</h4>

    <div class="form-row">
        <div class="form-group col-md-3 col-lg-3">
            <a class="form-control btn btn-primary" asp-controller="Contract" asp-action="Index" asp-route-isBack="true">Назад</a>
        </div>
        <div class="form-group col-md-3 col-lg-3">
            <a class="form-control btn btn-primary" asp-controller="Contract" asp-action="ClearSessionIds">Очистить</a>
        </div>
        <div class="form-group offset-md-3 col-md-3 col-lg-3">
            <div class="dropdown">
                <button class="btn btn-success dropdown-toggle col-md-12" type="button" id="reportButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="oi oi-document"></span>  Отчёты
                </button>
                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="reportButton">
                    <button class="dropdown-item rr-report-rasp" @(Model.Contracts.Any() ? "" : "disabled") href="#">Распоряжение</button>
                    <button class="dropdown-item rr-report-notification" @(Model.Contracts.Any() ? "" : "disabled") href="#" data-notify-type="1">Уведомление "прибыть" на мену'</button>
                    <button class="dropdown-item rr-report-notification" @(Model.Contracts.Any() ? "" : "disabled") href="#" data-notify-type="2">Уведомление "прибыть" для суда - нотариус</button>
                    <button class="dropdown-item rr-report-notification" @(Model.Contracts.Any() ? "" : "disabled") href="#" data-notify-type="3">Уведомление "прибыть" для суда - 1 собственник</button>
                    <button class="dropdown-item rr-report-notification" @(Model.Contracts.Any() ? "" : "disabled") href="#" data-notify-type="4">Уведомление "правоустанавливающие документы по наследству"</button>
                    <button class="dropdown-item rr-report-request-mvd" @(Model.Contracts.Any() ? "" : "disabled") href="#" data-request-type="1">Запрос в МВД (новый)</button>
                    <button class="dropdown-item rr-report-request-mvd" @(Model.Contracts.Any() ? "" : "disabled") href="#" data-request-type="2">Запрос в МВД (старый)</button>
                    <button class="dropdown-item rr-report-contract-date" @(Model.Contracts.Any() ? "" : "disabled") href="#">Договор с датами</button>
                    <button class="dropdown-item rr-report-contract-without-date" @(Model.Contracts.Any() ? "" : "disabled") href="#">Договор без дат</button>
                    <button class="dropdown-item rr-report-contract-pre" @(Model.Contracts.Any() ? "" : "disabled") href="#">Предварительный договор</button>
                    <button class="dropdown-item rr-report-dksr-contract" @(Model.Contracts.Any() ? "" : "disabled") href="#">Договор для ДКСР</button>
                </div>
            </div>
        </div>
    </div>

    <table class="table table-hover m-table">
        <thead>
            <tr>
                <th class="align-middle" style="width:70px;">
                    №
                </th>
                <th class="align-middle">
                    Адрес
                </th>
                <th class="align-middle d-none d-md-table-cell">
                    Участники мены
                </th>
                <th class="align-middle"></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Contracts.Any())
            {
                foreach (var item in Model.Contracts)
                {
                    <tr>
                        <td>@item.IdContract</td>
                        <td>
                            @if (item.ApartmentSide1 == null && item.ApartmentSide12 == null && item.ApartmentSide2 == null)
                            {
                                <div><b>Сторона 1</b></div>
                                <i class="text-danger">адрес не указан</i>
                                <div class="mb-2"></div>
                                <div><b>Сторона 2</b></div>
                                <i class="text-danger">адрес не указан</i>
                            }
                            @if (item.ApartmentSide1 != null || item.ApartmentSide12 != null)
                            {
                                <div><b>Сторона 1</b></div>
                            }

                            @{
                                string addressSide1 = null;
                            }
                            @if (item.ApartmentSide1 != null)
                            {
                                var address = Model.Streets.FirstOrDefault(r => r.IdStreet == item.ApartmentSide1.IdStreet)?.StreetName;
                                if (!string.IsNullOrEmpty(item.ApartmentSide1.House))
                                {
                                    if (!string.IsNullOrEmpty(address))
                                    {
                                        address += ", ";
                                    }
                                    address += "д. " + item.ApartmentSide1.House;
                                }
                                if (!string.IsNullOrEmpty(item.ApartmentSide1.Flat))
                                {
                                    if (!string.IsNullOrEmpty(address))
                                    {
                                        address += ", ";
                                    }
                                    address += "кв. " + item.ApartmentSide1.Flat;
                                }
                                if (!string.IsNullOrEmpty(item.ApartmentSide1.Room))
                                {
                                    if (!string.IsNullOrEmpty(address))
                                    {
                                        address += ", ";
                                    }
                                    address += "ком. " + item.ApartmentSide1.Room;
                                }
                                if (!string.IsNullOrEmpty(address))
                                {
                                    @address
                                    addressSide1 = address;
                                }
                                <div class="m-contract-list__address-dopinfo">
                                    @if (item.ApartmentSide1.InventoryNumber != null)
                                    {
                                        <span>Кадастровый номер: </span>@item.ApartmentSide1.InventoryNumber
                                    }
                                    @if (item.ApartmentSide1.InventoryNumber != null && (item.ApartmentSide1.TotalArea != null))
                                    {
                                        <br />
                                    }
                                    @if (item.ApartmentSide1.TotalArea != null)
                                    {
                                        <span>Общая площадь: </span>@item.ApartmentSide1.TotalArea<span> м<sup>2</sup></span>
                                    }
                                </div>
                            }
                            @{
                                string addressSide12 = null;
                            }
                            @if (item.ApartmentSide12 != null)
                            {
                                var address = Model.Streets.FirstOrDefault(r => r.IdStreet == item.ApartmentSide12.IdStreet)?.StreetName;
                                if (!string.IsNullOrEmpty(item.ApartmentSide12.House))
                                {
                                    if (!string.IsNullOrEmpty(address))
                                    {
                                        address += ", ";
                                    }
                                    address += "д. " + item.ApartmentSide12.House;
                                }
                                if (!string.IsNullOrEmpty(item.ApartmentSide12.Flat))
                                {
                                    if (!string.IsNullOrEmpty(address))
                                    {
                                        address += ", ";
                                    }
                                    address += "кв. " + item.ApartmentSide12.Flat;
                                }
                                if (!string.IsNullOrEmpty(item.ApartmentSide12.Room))
                                {
                                    if (!string.IsNullOrEmpty(address))
                                    {
                                        address += ", ";
                                    }
                                    address += "ком. " + item.ApartmentSide12.Room;
                                }
                                if (!string.IsNullOrEmpty(address))
                                {
                                    @address
                                    addressSide12 = address;
                                }
                                <div class="m-contract-list__address-dopinfo">
                                    @if (item.ApartmentSide12.InventoryNumber != null)
                                    {
                                        <span>Кадастровый номер: </span>@item.ApartmentSide12.InventoryNumber
                                    }
                                    @if (item.ApartmentSide12.InventoryNumber != null && (item.ApartmentSide12.TotalArea != null))
                                    {
                                        <br />
                                    }
                                    @if (item.ApartmentSide12.TotalArea != null)
                                    {
                                        <span>Общая площадь: </span>@item.ApartmentSide12.TotalArea<span> м<sup>2</sup></span>
                                    }
                                </div>
                            }
                            @if (string.IsNullOrEmpty(addressSide1) && string.IsNullOrEmpty(addressSide1))
                            {
                                <i class="text-danger">адрес не указан</i>
                            }
                            @if ((item.ApartmentSide1 != null || item.ApartmentSide12 != null) && item.ApartmentSide2 != null)
                            {
                                <div class="mb-2"></div>
                            }
                            @if (item.ApartmentSide2 != null)
                            {
                                <div><b>Сторона 2</b></div>
                            }
                            @if (item.ApartmentSide2 != null)
                            {
                                var address = Model.Streets.FirstOrDefault(r => r.IdStreet == item.ApartmentSide2.IdStreet)?.StreetName;
                                if (!string.IsNullOrEmpty(item.ApartmentSide2.House))
                                {
                                    if (!string.IsNullOrEmpty(address))
                                    {
                                        address += ", ";
                                    }
                                    address += "д. " + item.ApartmentSide2.House;
                                }
                                if (!string.IsNullOrEmpty(item.ApartmentSide2.Flat))
                                {
                                    if (!string.IsNullOrEmpty(address))
                                    {
                                        address += ", ";
                                    }
                                    address += "кв. " + item.ApartmentSide2.Flat;
                                }
                                if (!string.IsNullOrEmpty(item.ApartmentSide2.Room))
                                {
                                    if (!string.IsNullOrEmpty(address))
                                    {
                                        address += ", ";
                                    }
                                    address += "ком. " + item.ApartmentSide2.Room;
                                }
                                if (string.IsNullOrEmpty(address))
                                {
                                    <i class="text-danger">адрес не указан</i>
                                }
                                else
                                {
                                    @address
                                }
                                <div class="m-contract-list__address-dopinfo">
                                    @if (item.ApartmentSide2.InventoryNumber != null)
                                    {
                                        <span>Кадастровый номер: </span>@item.ApartmentSide2.InventoryNumber
                                    }
                                    @if (item.ApartmentSide2.InventoryNumber != null && (item.ApartmentSide2.TotalArea != null))
                                    {
                                        <br />
                                    }
                                    @if (item.ApartmentSide2.TotalArea != null)
                                    {
                                        <span>Общая площадь: </span>@item.ApartmentSide2.TotalArea<span> м<sup>2</sup></span>
                                    }
                                </div>
                            }

                        </td>
                        <td>
                            @if (item.ApartmentSide2 != null && item.ApartmentSide2.People != null && item.ApartmentSide2.People.Any())
                            {
                                foreach (var person in item.ApartmentSide2.People)
                                {
                                    <div class="@(person.IdPersonStatus == 1 ? "m-contract-list__requester" : "")">
                                        @(person.Family + " " + person.Name + (person.Father == null ? "" : " " + person.Father))
                                    </div>
                                }
                            }
                            else
                            {
                                <i class="text-danger">отсутствуют</i>
                            }
                        </td>
                        <td>
                            <div class="btn-group" role="group" aria-label="Панель доступа">
                                <a class="btn btn-primary oi oi-eye" title="Подробнее" aria-label="Подробнее"
                                   asp-action="Details" asp-controller="Contract" asp-route-idContract="@item.IdContract"></a>
                                <a class="btn btn-danger oi oi-x" title="Удалить" aria-label="Удалить"
                                   asp-action="RemoveSessionId" asp-controller="Contract" asp-route-id="@item.IdContract"></a>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="3" class="text-center"><i>Элементы отсутствуют</i></td></tr>
            }

        </tbody>
    </table>


    <page-link page-model="Model.PageOptions" page-action="Index"></page-link>
    @section Scripts
        {
        <script src="~/js/contract.reports.js" asp-append-version="true"></script>
    }
