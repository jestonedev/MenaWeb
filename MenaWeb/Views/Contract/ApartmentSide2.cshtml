@using MenaWeb.ViewModels
@model ContractVM

<div class="card rr-apartment-side-1-card">
    <div class="card-header d-flex justify-content-between">
        <h3>Сторона 2</h3>
        <div class="btn-group" role="group">
            <a href="#" data-for="ApartmentSide2" class="form-control btn btn-primary contract-toggler" title="Развернуть панель" style="font-weight:bold;">∧</a>
        </div>
    </div>
    <div class="card-body" id="ApartmentSide2">
        <input type="hidden" asp-for="Contract.ApartmentSide2.IdApartment" />
        <div class="form-row">
            <div class="form-group col-12">
                <label asp-for="Contract.ApartmentSide2.IdStreet">Улица</label>
                <select disabled class="selectpicker form-control" data-live-search="true" asp-for="Contract.ApartmentSide2.IdStreet" title="Улица"
                        asp-items="@{new SelectList(Model.Streets, "IdStreet", "StreetName", Model.Contract.ApartmentSide2.IdStreet)}">
                    <option></option>
                </select>
            </div>
            <div class="form-group col-4">
                <label asp-for="Contract.ApartmentSide2.House">Дом</label>
                <input disabled type="text" class="form-control input-house" asp-for="Contract.ApartmentSide2.House" maxlength="5" title="Номер дома">
            </div>
            <div class="form-group col-4">
                <label asp-for="Contract.ApartmentSide2.Flat">Квартира</label>
                <input disabled type="text" class="form-control input-premise-num" asp-for="Contract.ApartmentSide2.Flat" maxlength="10" title="Номер квартиры">
            </div>
            <div class="form-group col-4">
                <label asp-for="Contract.ApartmentSide2.Room">Комната</label>
                <input disabled type="text" class="form-control input-premise-num" asp-for="Contract.ApartmentSide2.Room" maxlength="5" title="Номер комнаты">
            </div>
            <div class="form-group col-8">
                <label asp-for="Contract.ApartmentSide2.IdApartmentType">Тип помещения</label>
                <select disabled class="selectpicker form-control" data-live-search="true" asp-for="Contract.ApartmentSide2.IdApartmentType" title="Тип помещения"
                        asp-items="@{new SelectList(Model.ApartmentTypes, "IdApartmentType", "ApartmentTypeName", Model.Contract.ApartmentSide2.IdApartmentType)}"></select>
            </div>
            <div class="form-group col-4">
                <label asp-for="Contract.ApartmentSide2.TotalArea">Общая площадь</label>
                <input disabled type="text" class="form-control input-decimal" asp-for="Contract.ApartmentSide2.TotalArea" title="Общая площадь">
                <span asp-validation-for="Contract.ApartmentSide2.TotalArea" class="text-danger"></span>
            </div>
            <div class="form-group col-8">
                <label asp-for="Contract.ApartmentSide2.InventoryNumber">Кадастровый номер</label>
                <input disabled type="text" class="form-control input-cadastral-num" asp-for="Contract.ApartmentSide2.InventoryNumber" maxlength="50" title="Кадастровый номер">
            </div>
            <div class="form-group col-4">
                <label asp-for="Contract.ApartmentSide2.Part">Доля</label>
                <input disabled type="text" class="form-control" asp-for="Contract.ApartmentSide2.Part" maxlength="5" title="Доля"
                       data-val="true" data-val-required="Укажите долю">
                <span asp-validation-for="Contract.ApartmentSide2.Part" class="text-danger"></span>
            </div>
            <div class="form-group col-12">
                <label asp-for="Contract.ApartmentSide2.CadastralPrice">Кадастровая стоимость</label>
                <input disabled type="text" class="form-control input-decimal" asp-for="Contract.ApartmentSide2.CadastralPrice" title="Кадастровая стоимость">
            </div>
            <div class="form-group col-12 m-evaluator" data-side="ApartmentSide2">
                <label>Оценка</label>
                <div class="m-evaluator-hidden-wrapper">
                    @{
                        string evaluatorTitle = null;
                        if (Model.Contract.ApartmentSide2.ApartmentEvaluations != null && Model.Contract.ApartmentSide2.ApartmentEvaluations.Any())
                        {

                            <input type="hidden" asp-for="Contract.ApartmentSide2.ApartmentEvaluations[0].IdApartmentEvaluation" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.ApartmentEvaluations[0].IdApartment" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.ApartmentEvaluations[0].IdEvaluator" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.ApartmentEvaluations[0].EvaluationDate"
                                   value="@(Model.Contract.ApartmentSide2.ApartmentEvaluations[0].EvaluationDate != null ?
                                        Model.Contract.ApartmentSide2.ApartmentEvaluations[0].EvaluationDate.Value.ToString("yyyy-MM-dd") : "")" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.ApartmentEvaluations[0].EvaluationNumber" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.ApartmentEvaluations[0].EvaluationPrice" />
                            var evaluator = Model.Contract.ApartmentSide2.ApartmentEvaluations.FirstOrDefault();
                            if (evaluator.Evaluator != null)
                            {
                                evaluatorTitle += evaluator.Evaluator.EvaluatorName;
                            }
                            if (evaluator.EvaluationPrice != null)
                            {
                                if (evaluatorTitle != null)
                                {
                                    evaluatorTitle += ": ";
                                }
                                evaluatorTitle += string.Format("{0} руб", evaluator.EvaluationPrice);
                            }
                        }
                    }
                </div>
                <div class="input-group">
                    <input disabled type="text" class="form-control m-input--disable-alwayes" name="Contract.ApartmentSide2.EvaluatorTitle" value="@evaluatorTitle" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary m-evaluator-btn" type="button" id="button-addon2">
                            <span class="oi oi-ellipses"></span>
                        </button>
                    </div>
                </div>
            </div>
            <div class="form-group col-12 m-land" data-side="ApartmentSide2">
                <label>Земельный участок</label>
                <div class="m-land-hidden-wrapper">
                    @{
                        string landAddress = null;
                        if (Model.Contract.ApartmentSide2.Land != null && Model.Contract.ApartmentSide2.Land.Any())
                        {

                            <input type="hidden" asp-for="Contract.ApartmentSide2.Land[0].IdLand" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.Land[0].IdApartment" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.Land[0].IdStreet" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.Land[0].House" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.Land[0].InventoryNumber" />
                            <input type="hidden" asp-for="Contract.ApartmentSide2.Land[0].TotalArea" />
                            var land = Model.Contract.ApartmentSide2.Land.FirstOrDefault();
                            landAddress = Model.Streets.FirstOrDefault(s => s.IdStreet == land.IdStreet)?.StreetName;
                            if (!string.IsNullOrEmpty(land.House))
                            {
                                if (landAddress != null)
                                {
                                    landAddress += ", ";
                                }
                                landAddress += land.House;
                            }
                        }
                    }
                </div>
                <div class="input-group">
                    <input disabled type="text" class="form-control m-input--disable-alwayes" name="Contract.ApartmentSide2.LandAddress" value="@landAddress" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary m-land-btn" type="button" id="button-addon2">
                            <span class="oi oi-ellipses"></span>
                        </button>
                    </div>
                </div>
            </div>

            <div class="col-12 mb-3">
                <partial name="AppartmentSide2Documents" model="Model" />
            </div>
        </div>
    </div>
</div>